setw -g mouse on

# --------------------------------- General ---------------------------------
# setenv LANG en_US.UTF-8

set -g default-shell /bin/zsh
set -g default-command /bin/zsh
set -s escape-time 0

# cancel the key bindings for C-b
unbind-key C-b
unbind-key C-g
# set prefix key
set -g prefix C-g
bind C-g send-prefix
# Command Sequence for Nested Tmux Sessions
bind-key a send-prefix

# Set vim key modes
set -g mode-keys vi

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
## tmux-copycat: search stdout/stderr on terminals with regex
##     prefix + / : start search
##     n: next match (in searching)
##     N: previous match (in searching)
##     Ctrl+w: copy highlighted text (in searching)
set -g @plugin 'tmux-plugins/tmux-logging'
## tmux-logging: log commands executed on tmux
##     prefix + shift + p: start/stop logging
##     prefix + alt + p: capture screen
##     prefix + shift + alt + p: save history
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
## tmux-yank: add copied text into clip board when copying
##     prefix + y: add selected text into clip board
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
## tmux-prefix-highlight: highlight when prefix is pressed
##    add #{prefix_hightlight} into status_right/status_left
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '30'
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'

# reduce delay of key stroke
set -sg escape-time 1
# -----------------------------------------------------------------------------

# ---------------------- Keep the window's name fixed ----------------------
# cf. http://blog.yagni.jp/archives/498 (in japanese)
# cf. http://stackoverflow.com/questions/6041178/keep-the-windows-name-fixed-in-tmux
set -g allow-rename off
# -----------------------------------------------------------------------------

# ---------------------- ウィンドウマネージャ向けのタイトル ----------------------
set -g set-titles on
set -g set-titles-string "[tmux] #T @ #H"
# -----------------------------------------------------------------------------

# Display time
set -g display-time 3500

# --------------------------------- Operations --------------------------------

# ==== Window ====

# begin index of window from 1
set -g base-index 0

# split window
bind-key v split-window -h
bind-key s split-window -v

# change active window
# bind-key -r c new-window
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key -r t next-window

# ==== Pane ====

# begin index of pane from 1
setw -g pane-base-index 0

# move between the panes in the key bindings for vim
set -g display-panes-time 10000
bind-key i display-panes
bind-key w select-pane -t +1
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# resize the pane in the key bindings for vim
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

# ==== Break or kill pane ====

bind-key b break-pane
bind-key q kill-pane
bind-key C-q kill-session
bind-key C-t new-window

# ==== Key-bindings ====

# reload tmux config file
bind-key C-r source-file ~/.tmux.conf \; display "Reloaded!"

# Look up in a man-page
bind-key m command-prompt -p "Man:" "split-window 'man %%'"

# open ranger
bind-key r run "tmux new-window ranger"

# -----------------------------------------------------------------------------

# --------------------------------- Appearance ---------------------------------

# use a 256-color terminal
set -g default-terminal "screen-256color"
# set -g pane-active-border-bg colour235

# ==== Customize statusline ====

# Length left
set -g status-left-length 90
set -g status-right-length 90

# Contents left
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

# Contents right
set -g status-right '#{prefix_highlight} | #[fg=white]#(~/.tmux/bin/wifi)#[default] #(~/.tmux/bin/battery --tmux) [%Y-%m-%d(%a) %H:%M]'

# Reload statusbar
set -g status-interval 1

# Centerize
set -g status-justify centre

# Enable visual notification
set-window-option -g monitor-activity on

# Enable visual notification
set -g visual-activity on

# Enable statusbar top
set -g status-position top


# ==== Colorscheme: Solarized ====
# Default statusbar colors
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
# set -g status-attr default

# Active window title colors
setw -g window-status-current-style bg=colour166,fg=white

# Pane border
set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour166

# Pane number display
set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange

# Clock
set-window-option -g clock-mode-colour colour64 #green

# ------------------------------------------------------------------


# ----------------------------- Copy mode -----------------------------
set-window-option -g mode-keys vi
bind-key [ copy-mode \; display "Copy mode!"

# enable clipboard sharing
# For MacOSX
if-shell "uname | grep -q Darwin" \
    'set -g default-command "reattach-to-user-namespace -l zsh"'
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

# For Linux(X11)
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi Enter send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind ] run-shell \
    'xsel -ob | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'"

## set the operation of the copy mode to vim-style
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode C-u send-keys -X page-up
bind-key -T copy-mode C-d send-keys -X page-down

run '~/.tmux/plugins/tpm/tpm'
